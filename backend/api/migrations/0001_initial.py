# Generated by Django 4.2.17 on 2025-02-10 10:45

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100, verbose_name='Название')),
                ('category_description', models.TextField(max_length=250, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=255, verbose_name='Название курса')),
                ('course_duration', models.IntegerField(default=1, verbose_name='Длительность курса (мес.)')),
                ('course_price', models.FloatField(default=1, verbose_name='Цена курса (в руб.)')),
                ('course_description', models.TextField(max_length=500, verbose_name='Описание курса')),
                ('course_for_who', models.CharField(choices=[('Для начинающих', 'Для начинающих'), ('Для продолжающих', 'Для продолжающих'), ('Для продвинутых', 'Для продвинутых'), ('Для всех', 'Для всех')], max_length=150, verbose_name='Для кого')),
                ('course_picture', models.ImageField(blank=True, null=True, upload_to='course_picture/', verbose_name='Картинка курса')),
                ('course_categories', models.ManyToManyField(to='api.categories', verbose_name='Категории')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='TextMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_name', models.CharField(max_length=255, verbose_name='Название текста')),
                ('text_field', models.TextField(max_length=10000, verbose_name='Текстовый материал к уроку')),
                ('text_file', models.FileField(blank=True, null=True, upload_to='text_materials/', verbose_name='Текстовый файл к уроку')),
                ('text_description', models.TextField(max_length=1000, verbose_name='Описание к тексту')),
            ],
            options={
                'verbose_name': 'Текстовый материал к уроку',
                'verbose_name_plural': 'Текстовые материалы к уроку',
            },
        ),
        migrations.CreateModel(
            name='VideoMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_name', models.CharField(max_length=255, verbose_name='Название видео')),
                ('video_file', models.FileField(upload_to='video_materials/', verbose_name='Видеоматериал к уроку')),
                ('video_description', models.TextField(max_length=1000, verbose_name='Описание видео')),
            ],
            options={
                'verbose_name': 'Видеоматериал',
                'verbose_name_plural': 'Видеоматериалы',
            },
        ),
        migrations.CreateModel(
            name='Lessons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_name', models.CharField(max_length=255, verbose_name='Название урока')),
                ('lesson_number', models.PositiveIntegerField(default=0, verbose_name='Номер урока в курсе')),
                ('lesson_description', models.TextField(max_length=300, verbose_name='Описание урока')),
                ('lesson_course', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.courses', verbose_name='Курс')),
                ('text_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.textmaterial', verbose_name='Текстовый материал к уроку')),
                ('video_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.videomaterial', verbose_name='Видеоматериал к уроку')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_name', models.CharField(max_length=150, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=150, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Отчество')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Логин')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('role', models.CharField(choices=[('student', 'Студент'), ('teacher', 'Учитель')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
